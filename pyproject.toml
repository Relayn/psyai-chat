[tool.poetry]
name = "psyai-chat"
version = "0.1.0"
description = "Django-based AI chat for psychological support (MVP)"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.2.3"
channels = "^4.2.2"
channels-redis = "^4.2.1"
daphne = "^4.2.0"
psycopg2-binary = "^2.9.10"
django-environ = "^0.11.2"
python-dotenv = "^1.1.0"
openai = "^1.88.0"
pillow = ">=11.3.0"
whitenoise = "^6.9.0"
celery = "^5.5.3"
redis = "^5.3.0"
yookassa = "^3.5.0"
django-anymail = "^13.0"
sendgrid = "^6.12.4"
boto3 = "^1.38.42"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pytest-django = "^4.8.0"
ruff = "^0.4.4"
black = "^24.4.2"
pre-commit = "^3.7.0"
pytest-cov = "^6.2.1"
pip-audit = "^2.9.0"
pytest-asyncio = "^0.23.7"
pytest-env = "^1.1.3"
flower = "^2.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.main:api"

# --- Инструменты форматирования и линтинга ---

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
]

# Исключаем папки, которые не нужно проверять
exclude = [
    "migrations",
]

# Игнорируем конкретные ошибки в конкретных файлах
[tool.ruff.lint.per-file-ignores]
# E501 - это "Line too long". Мы говорим ruff не ругаться на длинные строки
# в файлах миграций, так как мы их не контролируем.
"*/migrations/*.py" = ["E501"]
