"""
Django settings for psyai-chat project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
import environ

# --- 1. Настройка Environ ---
# Определяем базовую директорию проекта (корень, где лежит manage.py)
# BASE_DIR -> psyai-chat/
BASE_DIR = Path(__file__).resolve().parent.parent

# Инициализируем environ
env = environ.Env(
    # Устанавливаем значения по умолчанию и тип для DEBUG
    DJANGO_DEBUG=(bool, False)
)

# Ищем и читаем переменные из файла .env в корне проекта
env_path = BASE_DIR / ".env"
if os.path.exists(env_path):
    environ.Env.read_env(env_path)


# --- 2. Ключевые настройки безопасности ---
# Секретный ключ берется из .env файла. Никогда не храните его в коде!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# Режим отладки берется из .env файла.
DEBUG = env("DJANGO_DEBUG")

# Список хостов, которые могут обслуживать этот сайт.
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["localhost", "127.0.0.1"])
RENDER_HOSTNAME = env("RENDER_EXTERNAL_HOSTNAME", default=None)
if RENDER_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_HOSTNAME)

# --- 3. Приложения ---
INSTALLED_APPS = [
    "core.apps.CoreConfig",
    "users.apps.UsersConfig",
    "chat.apps.ChatConfig",
    "mocks.apps.MocksConfig",
    "payments.apps.PaymentsConfig",
    "analysis.apps.AnalysisConfig",
    "channels",
    "anymail",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# --- 4. База данных ---
# Конфигурация БД полностью берется из переменной DATABASE_URL.
# Это позволяет легко переключаться между SQLite, PostgreSQL и т.д.
DATABASES = {"default": env.db("DATABASE_URL")}


# --- 5. Валидаторы паролей ---
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# --- 6. Интернационализация ---
LANGUAGE_CODE = "ru-ru"
TIME_ZONE = "Europe/Moscow"
USE_I18N = True
USE_TZ = True


# --- 7. Статические файлы (CSS, JavaScript, Images) ---
STATIC_URL = "static/"
# Директория, куда `collectstatic` будет собирать все статические файлы для продакшена.
STATIC_ROOT = BASE_DIR / "staticfiles"
STATIC_ROOT.mkdir(parents=True, exist_ok=True)

# --- 7.1. Медиафайлы (Загрузки пользователей) ---
# URL, по которому будут доступны медиафайлы в браузере.
MEDIA_URL = "/media/"
# Абсолютный путь к папке, где Django будет хранить загруженные файлы.
MEDIA_ROOT = BASE_DIR / "media"


# --- 8. Настройки по умолчанию для моделей ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# --- 9. Кастомная модель пользователя ---
# Указываем Django использовать нашу модель User вместо стандартной.
AUTH_USER_MODEL = "users.User"

# --- 10. Настройки редиректов после входа/выхода ---
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "profile"  # Имя маршрута для перенаправления после входа
LOGOUT_REDIRECT_URL = "home"  # Имя маршрута для перенаправления после выхода

# --- 11. Настройка ASGI и Channels ---
# Указываем Django, где находится наше основное ASGI-приложение.
# Это необходимо для работы Django Channels.
ASGI_APPLICATION = "config.asgi.application"

# --- 12. Настройки внешних сервисов ---
# Читаем API-ключ для GPT из .env файла.
GPT_API_KEY = env("GPT_API_KEY")

# --- 13. Настройки Celery ---
CELERY_BROKER_URL = env("CELERY_BROKER_URL", default="redis://redis:6379/0")
CELERY_RESULT_BACKEND = env("CELERY_RESULT_BACKEND", default="redis://redis:6379/0")
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE

# --- 14. Настройки ЮKassa ---
YOOKASSA_SHOP_ID = env("YOOKASSA_SHOP_ID", default=None)
YOOKASSA_SECRET_KEY = env("YOOKASSA_SECRET_KEY", default=None)

# --- 15. Настройки безопасности вебхуков ---
YOOKASSA_WEBHOOK_IPS = [
    "185.71.76.0/27",
    "185.71.77.0/27",
    "77.75.153.0/25",
    "77.75.154.128/25",
    "2a02:5180:0:1509::/64",
    "2a02:5180:0:2655::/64",
    "2a02:5180:0:1533::/64",
    "2a02:5180:0:2669::/64",
]

# --- 16. Настройки Email ---
# Если в режиме DEBUG, выводим письма в консоль вместо реальной отправки.
if DEBUG:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
else:
    EMAIL_BACKEND = "anymail.backends.sendgrid.EmailBackend"

# Настройки для anymail (используются, когда DEBUG=False)
ANYMAIL = {
    "SENDGRID_API_KEY": env("SENDGRID_API_KEY", default=None),
}

# Email, который будет использоваться в поле "From" по умолчанию.
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL", default="webmaster@localhost")
# Email, на который будут приходить системные уведомления об ошибках.
SERVER_EMAIL = env("SERVER_EMAIL", default=DEFAULT_FROM_EMAIL)

# --- 17. Настройки AWS ---
AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID", default=None)
AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY", default=None)
AWS_REGION = env("AWS_REGION", default=None)